{
  "states_variables" : ["acceleration_x", "acceleration_y", "speed_x", "speed_y", "m", "pos_x", "pos_y", "angle"],
  "agent_variables" : ["booster", "alpha"],
  "initial_values" : {
    "acceleration_x": [0.0],
    "acceleration_y": [0.0],
    "speed_x": [0.0],
    "speed_y": [0.0],
    "m_carburant" : [100],
    "pos_x" : [200.0],
    "pos_y" : [200.0],
    "angle" : [0.0],
    "booster" : [0.0],
    "alpha" : [0.0]
  },
  "_limit" : ["min", "max", "n_bins"],
  "limit" : {
    "acceleration_x": [-10.0, 10.0, 21],
    "acceleration_y": [-10.0, 10.0, 21],
    "speed_x": [0.0, 40.0, 21],
    "speed_y": [-30.0, 30.0, 31],
    "m" : [0.0, 100, 201],
    "pos_x" : [0.0, 400, 201],
    "pos_y" : [0.0, 300.0, 156],
    "angle" : [-0.8, 0.8, 17],
    "booster" : [0.0, 1.0, 3],
    "alpha" : [-0.1, 0.1, 3]
  },
  "n_action" : {
    "booster": {"0" : 0.0, "1" : 0.5, "2" : 1.0},
    "alpha": {"0" : -0.1, "1" : 0.0, "2" : 0.1}
  },
  "_action_to_take" : "How action change trigger_variable, value is taken from n_action dictionary",
  "action_to_take" : {
    "booster": {"$booster$" : "$action$"},
    "alpha": {"$alpha$" : "$alpha$ + $action$"}
  },

  "_equations" : "compute values for each equation. Variable are updated after the loop",
  "equations_variables": {
      "$F$" : "600",
      "$G$" : "1.62",
      "$m_carburant$" : "$m_carburant$ - $booster$",
      "$weight_rocket$" : "5 + $m_carburant$",
      "dt" : "0.5",
      "$teta$" : "0.0",
      "$x_0$" : "pos_x",
      "$y_0$" : "pos_y",
      "$Vx_0$" : "$speed_x$",
      "$Vy_0$" : "$speed_y$",
      "$angle$" : "$teta$ + $alpha$",
      "$acceleration_x$" : "($F$/(5+$weight_rocket$) * sin($angle$)) * $booster$",
      "$acceleration_y$" : "($F$/(5+$weight_rocket$) * cos($angle$)) * $booster$ - $G$",
      "$speed_x$" : "($F$/(5+$weight_rocket$) * sin($angle$)) * $booster$ * $dt$ + $Vx_0$",
      "$speed_y$" : "($F$/(5+$weight_rocket$) * cos($angle$)) * $booster$ * $dt$ - $G$ * $dt$ + $Vy_0$",
      "$pos_x$": "(0.5 * $F$/(5+$weight_rocket$) * sin($angle$)) * $booster$ * $dt$^2 + $Vx_0$ * $dt$ + $x_0$",
      "$pos_y$": "(0.5 * $F$/(5+$weight_rocket$) * cos($angle$)) * $booster$ * $dt$^2 - $G$ * $dt$^2 + $Vy_0$ * $dt$ + $y_0$"
  },
  "equations_rewards": {
    "$booster$" : "-( ($pos_x$ - 200)^2 + ($pos_y$ - 0)^2 ) -  ($speed_x$^2 - $speed_y$^2)^2/( ($pos_x$ - 200)^2 + ($pos_y$ - 0)^2  + 0.0001) + $m_carburant$",
    "$alpha$" : "-( ($pos_x$ - 200)^2 + ($pos_y$ - 0)^2 ) - $angle$^2/( ($pos_x$ - 200)^2 + ($pos_y$ - 0)^2 + 0.0001)  - $speed_x$^2 - $speed_y$^2/( ($pos_x$ - 200)^2 + ($pos_y$ - 0)^2 + 0.0001) - ($acceleration_x$^2 - $acceleration_y$^2)^2/( ($pos_x$ - 200)^2 + ($pos_y$ - 0)^2 + 0.0001)"
  }
}
