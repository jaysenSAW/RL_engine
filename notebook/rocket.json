{
    "states_variables" : ["pos_x", "pos_y", "acceleration_x", "acceleration_y", "speed_x", "speed_y", "angle"],
    "agent_variables" : ["booster", "alpha"],
    "initial_values" : {
      "pos_x" : [100.0],
      "pos_y" : [175.0],
      "acceleration_x": [0.0],
      "acceleration_y": [0.0],
      "speed_x": [0.0],
      "speed_y": [0.0],
      "angle" : [0.0],
      "booster" : [0.0],
      "alpha" : [0.0],
      "m_fuel" : [100],
      "G" : [1.62],
      "futur_pos_x" : [100.0],
      "futur_pos_y" : [175.0],
      "normalize_y_min" : [200.0],
      "max_speed" : [0.0],
      "m_fuel_ini" : [100.0],
      "pos_y_star": [220.0],
      "pos_x_star": [120.0],
      "acceleration_x_constraint" : [6],
      "acceleration_y_constraint" : [6],
      "speed_x_limit" : [10],
      "speed_y_limit" : [10],
      "y_upper_limit" : [280],
      "y_lower_limit" : [2],
      "x_upper_limit" : [280],
      "x_lower_limit" : [60]
      },
    "_limit" : ["min", "max", "n_bins"],
    "limit" : {
      "pos_x" : [0.0, 300, 61],
      "pos_y" : [0.0, 300.0, 61],
      "acceleration_x": [-20.0, 20.0, 21],
      "acceleration_y": [-20.0, 20.0, 21],
      "speed_x": [-50.0, 50.0, 21],
      "speed_y": [-50.0, 50.0, 21],
      "angle" : [-0.8, 0.8, 17],
      "booster" : [0.0, 1.0, 3],
      "alpha" : [-0.1, 0.1, 3],
      "m_fuel" : [0.0, 100, 201]
    },
    "n_action" : {
      "booster": {"0" : 0.0, "1" : 0.5, "2" : 1.0},
      "alpha": {"0" : -0.1, "1" : 0.0, "2" : 0.1}
    },
    "_action_to_take" : "How action change agent_variables, value is taken from n_action dictionary",
    "action_to_take" : {
      "booster": {"$booster$" : "$action$"},
      "alpha": {"$alpha$" : "$alpha$ + $action$"}
    },
    "_equations" : "compute values for each equation. Variable are updated after the loop",
    "equations_variables": {
        "$F$" : "600",
        "$m_fuel$" : "$m_fuel$ - $booster$",
        "$weight_rocket$" : "5 + $m_fuel$",
        "dt" : "0.5",
        "$theta$" : "0.0",
        "$x_0$" : "$pos_x$",
        "$y_0$" : "$pos_y$",
        "$Vx_0$" : "$speed_x$",
        "$Vy_0$" : "$speed_y$",
        "$angle$" : "$theta$ + $alpha$",
        "$acceleration_x$" : "($F$/(5+$weight_rocket$) * np.sin($angle$)) * $booster$",
        "$acceleration_y$" : "($F$/(5+$weight_rocket$) * np.cos($angle$)) * $booster$ - $G$",
        "$speed_x$" : "($F$/(5+$weight_rocket$) * np.sin($angle$)) * $booster$ * $dt$ + $Vx_0$",
        "$speed_y$" : "($F$/(5+$weight_rocket$) * np.cos($angle$)) * $booster$ * $dt$ - $G$ * $dt$ + $Vy_0$",
        "$pos_x$": "(0.5 * $F$/(5+$weight_rocket$) * np.sin($angle$)) * $booster$ * $dt$**2 + $Vx_0$ * $dt$ + $x_0$",
        "$pos_y$": "(0.5 * $F$/(5+$weight_rocket$) * np.cos($angle$)) * $booster$ * $dt$**2 - $G$ * $dt$**2 + $Vy_0$ * $dt$ + $y_0$",
        "$futur_pos_y$" : "$pos_y$ + 3 * $speed_y$",
        "$futur_pos_x$" : "$pos_x$ + 3 * $speed_x$",
        "$normalize_y_min$" :"np.abs(min($normalize_y_min$, $futur_pos_y$) )",
        "max_speed" : "max(($speed_x$**2 - $speed_y$**2), $max_speed$)"
    },
    "equations_rewards": {
      "$dist_squared$" : "($pos_x$ - $pos_x_star$)**2 + ($pos_y$ - $pos_y_star$)**2",
      "$speed_norm$" : "$speed_x$**2 - $speed_y$**2",
      "$acceleration_y_constraint$" : "np.exp(np.abs($acceleration_y$) - $acceleration_y_constraint$)",
      "$speed_y_constraint$" : "np.exp(np.abs($speed_y$) - $speed_y_limit$)",
      "$y_lim_constraint$" : "np.exp($y_lower_limit$ - $futur_pos_y$) - np.exp(- $y_upper_limit$ + $futur_pos_y$)",
      "$_booster$" : "np.exp(-$futur_pos_y$)",
      "$booster$" : "- $dist_squared$ - $acceleration_y_constraint$ - $speed_y_constraint$ - $y_lim_constraint$ + $m_fuel$/$m_fuel_ini$",
      "$accele_x_constraint$" : "np.exp(np.abs($acceleration_x$) - $acceleration_x_constraint$)",
      "$speed_x_constraint$" : "np.exp(np.abs($speed_x$) - $speed_x_limit$)",
      "$x_lim_constraint$" : "np.exp($x_lower_limit$ - $futur_pos_x$) - np.exp(- $x_upper_limit$ + $futur_pos_x$)",
      "$alpha$" : " - $dist_squared$ - $accele_x_constraint$ - $speed_x_constraint$ - $x_lim_constraint$ + $m_fuel$/$m_fuel_ini$"
    }
  }